-- Written by: ??
-- Edited by: Kelly MJ
-- Last update: 6/8/2018
   -- Now account for 'Daily' or 'Hourly' surcharges
      -- Logic: calculates average of lesson durations for each student, then divides overall excess hours by the average to find the number of 
      -- 'days' the student has missed

SELECT CONCAT('<a href="admin_view_student.jsp?studentid=', CAST(SDT.studentId AS CHAR), '">', CAST(SDT.firstName AS CHAR), ' ', CAST(SDT.lastName AS CHAR), '</a>') AS Name
,  PGM.programmeName AS 'Program'
,  ROUND(SUM(ATD.duration)) AS 'Total Hours At End Date'
,  PGM.MinClockHours AS 'Program Total'
,  REG.Enddate AS 'EndDate'
,  PGM.overContactAmount AS 'Hours Surcharge'
,  CASE WHEN PGM.overContactType LIKE 'Hourly'
          THEN CONCAT(ROUND((PGM.MinClockHours)-(SUM(ATD.duration)), 1), ' Hours')
        WHEN PGM.overContactType LIKE 'Daily'
          THEN CONCAT(ROUND((ROUND((PGM.MinClockHours)-(SUM(ATD.duration))) / CS.lessonDur), 1), ' Days')
   END AS 'Surcharge Days/Hours' 
,  CASE WHEN PGM.overContactType LIKE 'Hourly' 
          THEN CONCAT('$',ROUND((ROUND((PGM.MinClockHours)-(SUM(ATD.duration))) * PGM.overContactAmount), 2))
        WHEN PGM.overContactType LIKE 'Daily'
          THEN CONCAT('$', ROUND(((ROUND((PGM.MinClockHours)-(SUM(ATD.duration))) * PGM.overContactAmount)/CS.lessonDur), 2))
   END AS 'Total'

FROM Attendance ATD
INNER JOIN Registrations    REG 
ON ATD.studentId = REG.studentId AND  REG.isActive = 1

INNER JOIN Programmes       PGM 
ON REG.programmeId = PGM.programmeId AND  PGM.isActive = 1

INNER JOIN Students         SDT 
ON REG.studentId = SDT.studentId AND SDT.isactive = 1

INNER JOIN (
  SELECT CSR.studentId
    , C.classId
    , SUM(C.lessonDuration)/COUNT(C.lessonDuration) AS lessonDur
  FROM ClassStudentReltn CSR
  INNER JOIN Classes C
  ON C.classId = CSR.classId
  GROUP BY CSR.studentId
  ) CS
ON CS.studentId = SDT.studentId

INNER JOIN (SELECT SDT.StudentID AS Student 
            FROM Attendance ATD 
            INNER JOIN  Registrations REG 
              ON ATD.studentId = REG.studentId 
            INNER JOIN Students        SDT 
              ON REG.studentId = SDT.studentId 
              AND SDT.isactive = 1
            INNER JOIN Programmes       PGM 
              ON REG.programmeId = PGM.programmeId
              AND  PGM.isActive = 1
              AND  REG.isActive = 1
            WHERE ATD.attendanceDate >= REG.enddate 
              AND REG.regStatus not like '3' 
              AND REG.regStatus not like '0'   
              AND PGM.programmename Not like ('Care%%') 
              AND PGM.programmename Not like ('Instructor Training')
            Group BY SDT.studentID
        ) as late 
ON REG.studentId = late.Student
 
WHERE
    REG.<ADMINID>
    AND REG.enrollmentSemesterId = 4000441
    AND REG.regStatus not like '3' 
    AND REG.regStatus not like '0'
    AND ATD.attendancedate <= REG.enddate
    AND ATD.subjectId IN (SELECT GSR.subjectId
            FROM CourseGroups CGP
            INNER JOIN GroupSubjectReltn GSR
              ON CGP.courseGroupId=GSR.courseGroupId
              AND GSR.isActive=1
            WHERE REG.programmeId = CGP.programmeId 
              AND CGP.isActive=1)
                                        
    AND ATD.classId IN (SELECT DISTINCT CRS.classId
            From ClassStudentReltn CRS
            Where CRS.studentId = ATD.studentId AND CRS.isActive=1)

GROUP BY late.Student
ORDER BY SDT.firstName
